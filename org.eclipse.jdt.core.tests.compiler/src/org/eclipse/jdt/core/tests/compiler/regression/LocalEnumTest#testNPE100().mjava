/* from JLS
"It is a compile-time error to reference a static field of an enum type
that is not a compile-time constant (15.28) from constructors, instance
initializer blocks, or instance variable initializer expressions of that
type.  It is a compile-time error for the constructors, instance initializer
blocks, or instance variable initializer expressions of an enum constant e1
to refer to itself or an enum constant of the same type that is declared to
the right of e1."
	*/
public void testNPE100() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X { \n" +
			"	public static void main(String[] args) {\n" +
			"		enum Y {\n" +
			"\n" +
			"			anEnumValue {\n" +
			"				private final Y thisOne = anEnumValue;\n" +
			"\n" +
			"				@Override String getMessage() {\n" +
			"					return \"Here is what thisOne gets assigned: \" + thisOne;\n" +
			"				}\n" +
			"			};\n" +
			"\n" +
			"			abstract String getMessage();\n" +
			"\n" +
			"			public static void main(String[] arguments) {\n" +
			"				System.out.println(anEnumValue.getMessage());\n" +
			"				System.out.println(\"SUCCESS\");\n" +
			"			}\n" +
			"		}\n" +
			"	}\n" +
			"\n" +
			"}\n",
		},
		"----------\n" +
		"1. ERROR in X.java (at line 6)\n" +
		"	private final Y thisOne = anEnumValue;\n" +
		"	                          ^^^^^^^^^^^\n" +
		"Cannot refer to the static enum field Y.anEnumValue within an initializer\n" +
		"----------\n",
		JavacTestOptions.JavacHasABug.JavacBugFixed_6_10);
}

