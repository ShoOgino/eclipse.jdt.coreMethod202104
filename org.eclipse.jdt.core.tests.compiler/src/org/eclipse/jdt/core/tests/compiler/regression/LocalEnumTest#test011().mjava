// reject user definition for #values()
public void test011() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"class X { \n" +
			"	public static void main(String[] args) {\n" +
			"     enum Y { \n" +
			"	\n" +
			"	BLEU,\n" +
			"	BLANC,\n" +
			"	ROUGE;\n" +
			"	\n" +
			"   void values() {} \n" +
			"   void values() {} \n" +
			"	public static void main(String[] args) {\n" +
			"		for(Y y: Y.values()) {\n" +
			"			System.out.print(y);\n" +
			"		}\n" +
			"	}\n" +
			"	\n" +
			"	  }\n" +
			"	  Y.main(args);\n" +
			"	}\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 9)\n" +
		"	void values() {} \n" +
		"	     ^^^^^^^^\n" +
		"The enum Y already defines the method values() implicitly\n" +
		"----------\n" +
		"2. ERROR in X.java (at line 10)\n" +
		"	void values() {} \n" +
		"	     ^^^^^^^^\n" +
		"The enum Y already defines the method values() implicitly\n" +
		"----------\n" +
		"3. WARNING in X.java (at line 11)\n" +
		"	public static void main(String[] args) {\n" +
		"	                                 ^^^^\n" +
		"The parameter args is hiding another local variable defined in an enclosing scope\n" +
		"----------\n");
}

