	// Test that pattern variables are seen by body of anonymous class creation
	public void test063b() {
		Map<String, String> compilerOptions = getCompilerOptions(true);
		runNegativeTest(
				new String[] {
						"X.java",
						"public class X {\n"+
						" @SuppressWarnings(\"preview\")\n"+
						" public void foo(Object o) {\n"
						+ "		int len = (o instanceof String p) ? test(new X.FI() {\n"
						+ "			@Override\n"
						+ "			public int length(String p1) {\n"
						+ "				return p.length();\n"
						+ "			}\n"
						+ "		}) : test(new X.FI() {\n"
						+ "			@Override\n"
						+ "			public int length(String p2) {\n"
						+ "				return p.length();\n"
						+ "			}\n"
						+ "		});\n"
						+ "	}\n"
						+ "	public int test(FI fi) {\n"
						+ "		return fi.length(\"\");\n"
						+ "	}\n"
						+ "	interface FI {\n"
						+ "		public int length(String str);\n"
						+ "	}" +
						"}",
					},
					"----------\n" +
					"1. ERROR in X.java (at line 12)\n" +
					"	return p.length();\n" +
					"	       ^\n" +
					"p cannot be resolved\n" +
					"----------\n",
					"",
					null,
					true,
					compilerOptions);
	}

