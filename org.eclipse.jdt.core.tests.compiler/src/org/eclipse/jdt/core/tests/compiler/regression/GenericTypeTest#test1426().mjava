//https://bugs.eclipse.org/bugs/show_bug.cgi?id=258039
public void test1426() {
	this.runNegativeTest(
			new String[] {
				"X.java", //-----------------------------------------------------------------------
				"import java.util.*;\n" +
				"public class X {\n" +
				"	boolean foo() {\n" +
				"		return null instanceof List<Object>;\n" +
				"	}\n" +
				"	<T extends List<Object>> boolean foo2() {\n" +
				"		return null instanceof T;\n" +
				"	}\n" +
				"	boolean foo3() {\n" +
				"		return null instanceof Map<Object,String>;\n" +
				"	}\n" +
				"	<T extends Map<Object,String>> boolean foo4() {\n" +
				"		return null instanceof T;\n" +
				"	}\n" +
				"}\n",//-----------------------------------------------------------------------
			},
			"----------\n" +
			"1. ERROR in X.java (at line 4)\n" +
			"	return null instanceof List<Object>;\n" +
			"	       ^^^^^^^^^^^^^^^^^^^^\n" +
			"Cannot perform instanceof check against parameterized type List<Object>. Use the form List<?> instead since further generic type information will be erased at runtime\n" +
			"----------\n" +
			"2. ERROR in X.java (at line 7)\n" +
			"	return null instanceof T;\n" +
			"	       ^^^^^^^^^^^^^^^^^\n" +
			"Cannot perform instanceof check against type parameter T. Use its erasure List<?> instead since further generic type information will be erased at runtime\n" +
			"----------\n" +
			"3. ERROR in X.java (at line 10)\n" +
			"	return null instanceof Map<Object,String>;\n" +
			"	       ^^^^^^^^^^^^^^^^^^^\n" +
			"Cannot perform instanceof check against parameterized type Map<Object,String>. Use the form Map<?,?> instead since further generic type information will be erased at runtime\n" +
			"----------\n" +
			"4. ERROR in X.java (at line 13)\n" +
			"	return null instanceof T;\n" +
			"	       ^^^^^^^^^^^^^^^^^\n" +
			"Cannot perform instanceof check against type parameter T. Use its erasure Map<?,?> instead since further generic type information will be erased at runtime\n" +
			"----------\n");
}

