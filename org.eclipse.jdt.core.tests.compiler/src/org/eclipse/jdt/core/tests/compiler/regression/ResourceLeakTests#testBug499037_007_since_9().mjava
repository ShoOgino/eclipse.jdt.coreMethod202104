public void testBug499037_007_since_9() {
	if (this.complianceLevel < ClassFileConstants.JDK9) return;
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.IGNORE);
	options.put(CompilerOptions.OPTION_ReportExplicitlyClosedAutoCloseable, CompilerOptions.ERROR);
	runLeakTest(
		new String[] {
			"X.java",
			"import java.io.IOException;\n"+
			"\n"+
			"public class X {\n"+
			"	void test(boolean b) throws IOException {\n"+
			"		Y y = new Y();\n"+
			"		if (b) {\n"+
			"			try (y) { \n"+
			"			    // nothing \n"+
			"			}\n"+
			"		}\n"+
			"		else {\n"+
			"			y.close();\n"+
			"		}\n"+
			"	}\n"+
			"}\n"+
			"\n"+
			"class Y implements AutoCloseable {\n"+
			"	@Override\n"+
			"	public void close() throws IOException {\n"+
			"	}\n"+
			"}\n"
		},
		"",
		options);
}

