/**
 * From JLS 13 16.1.8, V is [un]assigned after a switch expression (15.28) iff all of the following are true:
 * 	V is [un]assigned before every yield statement that may exit the switch statement.
 * 	For each switch labeled rule (14.11.1) in the switch block, V is [un]assigned after the
 *          expression, block, or throw statement of the switch labeled rule.
 */
public void testBug548318_019() {
	if (!checkPreviewAllowed())


		return;
	Map<String, String> defaultOptions = setPresetPreviewOptions();
	String expectedProblemLog =
			"----------\n" +
			"1. ERROR in X.java (at line 15)\n" +
			"	return v + t;\n" +
			"	       ^\n" +
			"The local variable v may not have been initialized\n" +
			"----------\n" +
			"2. ERROR in X.java (at line 19)\n" +
			"	Zork();\n" +
			"	^^^^\n" +
			"The method Zork() is undefined for the type X\n" +
			"----------\n";
	String[] testFiles = new String[] {
			"X.java", // =================
			"public class X {\n" +
			"	public static int foo(int i) {\n" +
			"		int v;\n" +
			"		int t = switch (i) {\n" +
			"		case 0 : {\n" +
			"			yield 1;\n" +
			"		}\n" +
			"		case 2 : {\n" +
			"			yield 2;\n" +
			"		}\n" +
			"		default : {\n" +
			"			yield 3;\n" +
			"		}\n" +
			"		};\n" +
			"		return v + t;\n" +
			"	}\n" +
			"	\n" +
			"	public boolean bar() {\n" +
			"		Zork();\n" +
			"		return true;\n" +
			"	}\n" +
			"	public static void main(String[] args) {\n" +
			"		System.out.println(foo(3));\n" +
			"	}\n" +
			"}\n",
	};
	this.runNegativeTest(
			testFiles,
			expectedProblemLog,
			null,
			true,
			defaultOptions);
}

