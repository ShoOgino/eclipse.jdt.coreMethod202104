	public void test062() {
		Map<String, String> compilerOptions = getCompilerOptions(true);
		runNegativeTest(
				new String[] {
						"X.java",
						"public class X {\n"+
						" @SuppressWarnings(\"preview\")\n"+
						" public void foo(Object o) {\n"+
						"   int len  = (o instanceof String p) ? test(p -> p.length()) : test(p -> p.length());\n"+
						" }\n"+
						"  public int test(FI fi) {\n" +
						"	  return fi.length(\"\");\n" +
						"  } \n" +
						"  interface FI {\n" +
						"	  public int length(String str);\n" +
						"  }" +
						"}",
				},
				"----------\n" +
				"1. ERROR in X.java (at line 4)\n" +
				"	int len  = (o instanceof String p) ? test(p -> p.length()) : test(p -> p.length());\n" +
				"	                                          ^\n" +
				"Lambda expression\'s parameter p cannot redeclare another local variable defined in an enclosing scope. \n" +
				"----------\n",
				"",
				null,
				true,
				compilerOptions);
	}

