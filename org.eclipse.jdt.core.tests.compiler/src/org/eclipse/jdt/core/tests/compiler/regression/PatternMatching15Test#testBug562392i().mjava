	public void testBug562392i() {
		Map<String, String> compilerOptions = getCompilerOptions(true);
		String backup = compilerOptions.get(CompilerOptions.OPTION_EnablePreviews);
		compilerOptions.put(CompilerOptions.OPTION_EnablePreviews, CompilerOptions.DISABLED);
		try {
			runNegativeTest(
					new String[] {
							"Test.java",
							"import java.util.ArrayList;\n" +
									"import java.util.List;\n" +
									"import java.util.function.Function;\n" +
									"import java.util.function.UnaryOperator;\n" +
									"@SuppressWarnings({\"preview\"})\n" +
									"public class Test<T> {\n" +
									"    public boolean foo(Function<ArrayList<T>, ArrayList<T>> obj) {\n" +
									"        if (obj instanceof UnaryOperator<? extends List<T>>) {\n" +
									"            return false;\n" +
									"        }\n" +
									"        return true;\n" +
									"    }\n" +
									"}\n",
					},
					"----------\n" +
					"1. ERROR in Test.java (at line 8)\n" +
					"	if (obj instanceof UnaryOperator<? extends List<T>>) {\n" +
					"	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
					"Cannot perform instanceof check against parameterized type UnaryOperator<? extends List<T>>. Use the form UnaryOperator<?> instead since further generic type information will be erased at runtime\n" +
					"----------\n",
					"",
					null,
					true,
					compilerOptions);
		} finally {
			compilerOptions.put(CompilerOptions.OPTION_EnablePreviews, backup);
		}
	}

