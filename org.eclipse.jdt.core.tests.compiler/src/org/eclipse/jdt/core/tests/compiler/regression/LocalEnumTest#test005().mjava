// check method override diagnosis (with no enum constants)
public void test005() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"class X { \n" +
			"	public static void main(String[] args) {\n" +
			"     enum Y { \n" +
			"		;\n" +
			"		protected Object clone() { return this; }\n" +
			"	  }\n" +
			"	}\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 5)\n" +
		"	protected Object clone() { return this; }\n" +
		"	                 ^^^^^^^\n" +
		"Cannot override the final method from Enum<Y>\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 5)\n" +
		"	protected Object clone() { return this; }\n" +
		"	                 ^^^^^^^\n" +
		"The method clone() of type Y should be tagged with @Override since it actually overrides a superclass method\n" +
		"----------\n");
}

