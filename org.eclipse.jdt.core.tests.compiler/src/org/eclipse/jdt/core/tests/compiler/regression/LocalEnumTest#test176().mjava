//https://bugs.eclipse.org/bugs/show_bug.cgi?id=285701
public void test176() {
	if(this.complianceLevel < ClassFileConstants.JDK1_6) {
		return;
	}
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"	public static void main(String[] args) throws Exception {\n" +
			"		enum Y {\n" +
			"			A(\"\"), B(\"SUCCESS\"), C(\"Hello\");\n" +
			"\n" +
			"			String message;\n" +
			"\n" +
			"			Y(@Deprecated String s) {\n" +
			"				this.message = s;\n" +
			"			}\n" +
			"			@Override\n" +
			"			public String toString() {\n" +
			"				return this.message;\n" +
			"			}\n" +
			"		}\n" +
			"	}\n" +
			"}\n"
		},
		""
	);
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_Process_Annotations, CompilerOptions.ENABLED);
	this.runConformTest(
		false,
		new String[] {
				"X.java",
				"public class X {\n" +
				"	public static void main(String[] args) throws Exception {\n" +
				"		enum Y {\n" +
				"			A(\"\"), B(\"SUCCESS\"), C(\"Hello\");\n" +
				"\n" +
				"			String message;\n" +
				"\n" +
				"			Y(@Deprecated String s) {\n" +
				"				this.message = s;\n" +
				"			}\n" +
				"			@Override\n" +
				"			public String toString() {\n" +
				"				return this.message;\n" +
				"			}\n" +
				"		}\n" +
				"		System.out.println(Y.B);\n" +
				"	}\n" +
				"}\n"
		},
		null,
		options,
		"",
		"SUCCESS",
		"",
		JavacTestOptions.Excuse.JavacHasWarningsEclipseNotConfigured);
}

