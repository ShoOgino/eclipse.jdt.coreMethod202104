// https://bugs.eclipse.org/bugs/show_bug.cgi?id=83901
public void test073() {
	this.runNegativeTest( // implement inherited method but as abstract
		new String[] {
			"X.java",
			"public class X {\n" +
			"  public static void main(String[] args) {\n" +
			"		enum X3 implements I {\n" +
			"	;\n" +
			"		public abstract void _test();\n" +
			"	}\n" +
            "  }\n" +
			"}\n" +
			"interface I { void _test(); }\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 5)\n" +
		"	public abstract void _test();\n" +
		"	                     ^^^^^^^\n" +
		"The enum X3 can only define the abstract method _test() if it also defines enum constants with corresponding implementations\n" +
		"----------\n"
		// X3 is not abstract and does not override abstract method test() in X3
	);
	this.runNegativeTest( // implement inherited method as abstract with constant
		new String[] {
			"X.java",
			"public class X {\n" +
			"  public static void main(String[] args) {\n" +
			"  	enum X3a implements I {\n" +
			"		A;\n" +
			"		public abstract void _test();\n" +
			"	}\n" +
            "  }\n" +
			"}\n" +
			"interface I { void _test(); }\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 4)\n" +
		"	A;\n" +
		"	^\n" +
		"The enum constant A must implement the abstract method _test()\n" +
		"----------\n"
		// X3a is not abstract and does not override abstract method test() in X3a
	);
	this.runConformTest( // implement inherited method as abstract with constant body
		new String[] {
			"X.java",
			"public class X {\n" +
			"  public static void main(String[] args) {\n" +
			"	enum X3b implements I {\n" +
			"		A() { public void _test() {} };\n" +
			"		public abstract void _test();\n" +
			"	}\n" +
            "  }\n" +
			"}\n" +
			"interface I { void _test(); }\n"
		},
		""
	);
	this.runNegativeTest( // implement inherited method as abstract with random constant body
		new String[] {
			"X.java",
			"public class X {\n" +
			"  public static void main(String[] args) {\n" +
			" 	 enum X3c implements I {\n" +
			"		A() { void random() {} };\n" +
			"	 public abstract void _test();\n" +
			"	}\n" +
            "  }\n" +
			"}\n" +
			"interface I { void _test(); }\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 4)\n" +
		"	A() { void random() {} };\n" +
		"	^\n" +
		"The enum constant A must implement the abstract method _test()\n" +
		"----------\n"
		// <anonymous X3c$1> is not abstract and does not override abstract method test() in X3c
	);
}

