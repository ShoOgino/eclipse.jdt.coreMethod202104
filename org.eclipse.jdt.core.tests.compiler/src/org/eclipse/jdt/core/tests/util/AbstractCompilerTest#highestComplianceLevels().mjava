	/*
	 * Returns the highest compliance level this VM instance can run.
	 */
	public static long highestComplianceLevels() {
		int complianceLevels = AbstractCompilerTest.getPossibleComplianceLevels();
		if ((complianceLevels & AbstractCompilerTest.F_15) != 0) {
			return ClassFileConstants.getComplianceLevelForJavaVersion(ClassFileConstants.MAJOR_VERSION_15);
		}
		if ((complianceLevels & AbstractCompilerTest.F_14) != 0) {
			return ClassFileConstants.getComplianceLevelForJavaVersion(ClassFileConstants.MAJOR_VERSION_14);
		}
		if ((complianceLevels & AbstractCompilerTest.F_13) != 0) {
			return ClassFileConstants.getComplianceLevelForJavaVersion(ClassFileConstants.MAJOR_VERSION_13);
		}
		if ((complianceLevels & AbstractCompilerTest.F_12) != 0) {
			return ClassFileConstants.getComplianceLevelForJavaVersion(ClassFileConstants.MAJOR_VERSION_12);
		}
		if ((complianceLevels & AbstractCompilerTest.F_11) != 0) {
			return ClassFileConstants.getComplianceLevelForJavaVersion(ClassFileConstants.MAJOR_VERSION_11);
		}
		if ((complianceLevels & AbstractCompilerTest.F_10) != 0) {
			return ClassFileConstants.JDK10;
		}
		if ((complianceLevels & AbstractCompilerTest.F_9) != 0) {
			return ClassFileConstants.JDK9;
		}
		if ((complianceLevels & AbstractCompilerTest.F_1_8) != 0) {
			return ClassFileConstants.JDK1_8;
		}
		if ((complianceLevels & AbstractCompilerTest.F_1_7) != 0) {
			return ClassFileConstants.JDK1_7;
		}
		if ((complianceLevels & AbstractCompilerTest.F_1_6) != 0) {
			return ClassFileConstants.JDK1_6;
		}
		if ((complianceLevels & AbstractCompilerTest.F_1_5) != 0) {
			return ClassFileConstants.JDK1_5;
		}
		if ((complianceLevels & AbstractCompilerTest.F_1_4) != 0) {
			return ClassFileConstants.JDK1_4;
		}
		return ClassFileConstants.JDK1_3;
	}

