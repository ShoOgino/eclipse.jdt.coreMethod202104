	/*
	 * Returns the possible compliance levels this VM instance can run.
	 */
	public static int getPossibleComplianceLevels() {
		if (possibleComplianceLevels == UNINITIALIZED) {
			String specVersion = System.getProperty("java.specification.version");
			isJRE15Plus =  CompilerOptions.VERSION_15.equals(specVersion);
			isJRE14Plus = isJRE15Plus || CompilerOptions.VERSION_14.equals(specVersion);
			isJRE13Plus = isJRE14Plus || CompilerOptions.VERSION_13.equals(specVersion);
			isJRE12Plus = isJRE13Plus || CompilerOptions.VERSION_12.equals(specVersion);
			isJRE11Plus = isJRE12Plus || CompilerOptions.VERSION_11.equals(specVersion);
			isJRE10Plus = isJRE11Plus || CompilerOptions.VERSION_10.equals(specVersion);
			isJRE9Plus = isJRE10Plus || CompilerOptions.VERSION_9.equals(specVersion);
			initReflectionVersion();
			String compliances = System.getProperty("compliance");
			if (compliances != null) {
				possibleComplianceLevels = 0;
				for (String compliance : compliances.split(",")) {
					if (CompilerOptions.VERSION_1_3.equals(compliance)) {
						possibleComplianceLevels |= RUN_JAVAC ? NONE : F_1_3;
					} else if (CompilerOptions.VERSION_1_4.equals(compliance)) {
						possibleComplianceLevels |= RUN_JAVAC ? NONE : F_1_4;
					} else if (CompilerOptions.VERSION_1_5.equals(compliance)) {
						possibleComplianceLevels |= F_1_5;
					} else if (CompilerOptions.VERSION_1_6.equals(compliance)) {
						possibleComplianceLevels |= F_1_6;
					} else if (CompilerOptions.VERSION_1_7.equals(compliance)) {
						possibleComplianceLevels |= F_1_7;
					} else if (CompilerOptions.VERSION_1_8.equals(compliance)) {
						possibleComplianceLevels |= F_1_8;
					} else if (CompilerOptions.VERSION_9.equals(compliance)) {
						if (isJRE9Plus)
							possibleComplianceLevels |= F_9;
					} else if (CompilerOptions.VERSION_10.equals(compliance)) {
						if (isJRE10Plus)
							possibleComplianceLevels |= F_10;
					} else if (CompilerOptions.VERSION_11.equals(compliance)) {
						if (isJRE11Plus)
							possibleComplianceLevels |= F_11;
					} else if (CompilerOptions.VERSION_12.equals(compliance)) {
						if (isJRE12Plus)
							possibleComplianceLevels |= F_12;
					} else if (CompilerOptions.VERSION_13.equals(compliance)) {
						if (isJRE13Plus)
							possibleComplianceLevels |= F_13;
					} else if (CompilerOptions.VERSION_14.equals(compliance)) {
						if (isJRE14Plus)
							possibleComplianceLevels |= F_14;
					} else if (CompilerOptions.VERSION_15.equals(compliance)) {
						if (isJRE15Plus)
							possibleComplianceLevels |= F_15;
					} else {
						System.out.println("Ignoring invalid compliance (" + compliance + ")");
						System.out.print("Use one of ");
						System.out.print(CompilerOptions.VERSION_1_3 + ", ");
						System.out.print(CompilerOptions.VERSION_1_4 + ", ");
						System.out.print(CompilerOptions.VERSION_1_5 + ", ");
						System.out.print(CompilerOptions.VERSION_1_6 + ", ");
						System.out.print(CompilerOptions.VERSION_1_7 + ", ");
						System.out.print(CompilerOptions.VERSION_1_8 + ", ");
						System.out.print(CompilerOptions.VERSION_1_8 + ", ");
						System.out.print(CompilerOptions.VERSION_9 + ", ");
						System.out.print(CompilerOptions.VERSION_10 + ", ");
						System.out.print(CompilerOptions.VERSION_11 + ", ");
						System.out.print(CompilerOptions.VERSION_12 + ", ");
						System.out.print(CompilerOptions.VERSION_13 + ", ");
						System.out.println(CompilerOptions.VERSION_14 + ", ");
						System.out.println(CompilerOptions.VERSION_15);
					}
				}
				if (possibleComplianceLevels == 0) {
					System.out.println("Defaulting to all possible compliances");
					possibleComplianceLevels = UNINITIALIZED;
				}
			}
			if (possibleComplianceLevels == UNINITIALIZED) {
				if (!RUN_JAVAC) {
					possibleComplianceLevels = F_1_3;
					boolean canRun1_4 = !"1.0".equals(specVersion)
						&& !CompilerOptions.VERSION_1_1.equals(specVersion)
						&& !CompilerOptions.VERSION_1_2.equals(specVersion)
						&& !CompilerOptions.VERSION_1_3.equals(specVersion);
					if (canRun1_4) {
						possibleComplianceLevels |= F_1_4;
					}
					boolean canRun1_5 = canRun1_4 && !CompilerOptions.VERSION_1_4.equals(specVersion);
					if (canRun1_5) {
						possibleComplianceLevels |= F_1_5;
					}
					boolean canRun1_6 = canRun1_5 && !CompilerOptions.VERSION_1_5.equals(specVersion);
					if (canRun1_6) {
						possibleComplianceLevels |= F_1_6;
					}
					boolean canRun1_7 = canRun1_6 && !CompilerOptions.VERSION_1_6.equals(specVersion);
					if (canRun1_7) {
						possibleComplianceLevels |= F_1_7;
					}
					boolean canRun1_8 = canRun1_7 && !CompilerOptions.VERSION_1_7.equals(specVersion);
					if (canRun1_8) {
						possibleComplianceLevels |= F_1_8;
					}
					boolean canRun9 = canRun1_8 && !CompilerOptions.VERSION_1_8.equals(specVersion);
					if (canRun9) {
						possibleComplianceLevels |= F_9;
					}
					boolean canRun10 = canRun9 && !CompilerOptions.VERSION_9.equals(specVersion);
					if (canRun10) {
						possibleComplianceLevels |= F_10;
					}
					boolean canRun11 = canRun10 && !CompilerOptions.VERSION_10.equals(specVersion);
					if (canRun11) {
						possibleComplianceLevels |= F_11;
					}
					boolean canRun12 = canRun11 && !CompilerOptions.VERSION_11.equals(specVersion);
					if (canRun12) {
						possibleComplianceLevels |= F_12;
					}
					boolean canRun13 = canRun12 && !CompilerOptions.VERSION_12.equals(specVersion);
					if (canRun13) {
						possibleComplianceLevels |= F_13;
					}
					boolean canRun14 = canRun13 && !CompilerOptions.VERSION_13.equals(specVersion);
					if (canRun14) {
						possibleComplianceLevels |= F_14;
					}
					boolean canRun15 = canRun14 && !CompilerOptions.VERSION_14.equals(specVersion);
					if (canRun15) {
						possibleComplianceLevels |= F_15;
					}
				} else if ("1.0".equals(specVersion)
							|| CompilerOptions.VERSION_1_1.equals(specVersion)
							|| CompilerOptions.VERSION_1_2.equals(specVersion)
							|| CompilerOptions.VERSION_1_3.equals(specVersion)
							|| CompilerOptions.VERSION_1_4.equals(specVersion)) {
					possibleComplianceLevels = NONE;
				} else {
					possibleComplianceLevels = F_1_5;
					if (!CompilerOptions.VERSION_1_5.equals(specVersion)) {
						possibleComplianceLevels |= F_1_6;
						if (!CompilerOptions.VERSION_1_6.equals(specVersion)) {
							possibleComplianceLevels |= F_1_7;
							if (!CompilerOptions.VERSION_1_7.equals(specVersion)) {
								possibleComplianceLevels |= F_1_8;
								if (!CompilerOptions.VERSION_1_8.equals(specVersion)) {
									possibleComplianceLevels |= F_9;
									if (!CompilerOptions.VERSION_9.equals(specVersion)) {
										possibleComplianceLevels |= F_10;
										if (!CompilerOptions.VERSION_10.equals(specVersion)) {
											possibleComplianceLevels |= F_11;
											if (!CompilerOptions.VERSION_11.equals(specVersion)) {
												possibleComplianceLevels |= F_12;
												if (!CompilerOptions.VERSION_12.equals(specVersion)) {
													possibleComplianceLevels |= F_13;
													if (!CompilerOptions.VERSION_13.equals(specVersion)) {
														possibleComplianceLevels |= F_14;
														if (!CompilerOptions.VERSION_14.equals(specVersion)) {
															possibleComplianceLevels |= F_15;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		if (possibleComplianceLevels == NONE) {
			System.out.println("Skipping all compliances (found none compatible with run.javac=enabled).");
		}
		return possibleComplianceLevels;
	}

