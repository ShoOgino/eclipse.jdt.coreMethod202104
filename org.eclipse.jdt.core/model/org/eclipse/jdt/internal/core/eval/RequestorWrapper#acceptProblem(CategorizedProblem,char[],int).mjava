/**
 * @see ICodeSnippetRequestor
 */
@Override
public void acceptProblem(CategorizedProblem problem, char[] fragmentSource, int fragmentKind) {
	try {
		Map<String, Object> attributes = new HashMap<>();
		attributes.put(IJavaModelMarker.ID, problem.getID());
		attributes.put(IMarker.CHAR_START, problem.getSourceStart());
		attributes.put(IMarker.CHAR_END, problem.getSourceEnd() + 1);
		attributes.put(IMarker.LINE_NUMBER, problem.getSourceLineNumber());
		attributes.put(IMarker.MESSAGE, problem.getMessage());
		attributes.put(IMarker.SEVERITY, (problem.isError() ? IMarker.SEVERITY_ERROR : problem.isWarning() ? IMarker.SEVERITY_WARNING : IMarker.SEVERITY_INFO));
		attributes.put(IMarker.SOURCE_ID, JavaBuilder.SOURCE_ID);

		IMarker marker = ResourcesPlugin.getWorkspace().getRoot().createMarker(IJavaModelMarker.TRANSIENT_PROBLEM, attributes);
		this.requestor.acceptProblem(marker, new String(fragmentSource), fragmentKind);
	} catch (CoreException e) {
		e.printStackTrace();
	}
}

