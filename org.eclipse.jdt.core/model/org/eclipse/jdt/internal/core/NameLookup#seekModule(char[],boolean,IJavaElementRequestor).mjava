	public void seekModule(char[] name, boolean prefixMatch, IJavaElementRequestor requestor) {
		long start = -1;
		if (VERBOSE)
			start = System.currentTimeMillis();
		try {

			IPrefixMatcherCharArray prefixMatcher = prefixMatch
					? CharOperation.equals(name, CharOperation.ALL_PREFIX)
							? (x, y, isCaseSensitive) -> true
							: CharOperation::prefixEquals
					: CharOperation::equals;

			int count= this.packageFragmentRoots.length;
			for (int i= 0; i < count; i++) {
				if (requestor.isCanceled())
					return;
				IPackageFragmentRoot root= this.packageFragmentRoots[i];
				IModuleDescription module = null;
				if (root instanceof JrtPackageFragmentRoot) {
					if (!prefixMatcher.matches(name, root.getElementName().toCharArray(), false)) {
						continue;
					}
				}
				module = getModuleDescription(this.rootProject, root, this.rootToModule, this.rootToResolvedEntries::get);
				if (module != null && prefixMatcher.matches(name, module.getElementName().toCharArray(), false)) {
					requestor.acceptModule(module);
				}
			}
		} finally {
			if (VERBOSE)
				this.timeSpentInSeekModule += System.currentTimeMillis()-start;
		}
	}

