	/**
	 * Notifies the given requestor of all package fragments with the
	 * given name. Checks the requestor at regular intervals to see if the
	 * requestor has canceled. The domain of
	 * the search is bounded by the <code>IJavaProject</code>
	 * this <code>NameLookup</code> was obtained from.
	 *
	 * @param partialMatch partial name matches qualify when <code>true</code>;
	 *	only exact name matches qualify when <code>false</code>
	 */
	public void seekPackageFragments(String name, boolean partialMatch, IJavaElementRequestor requestor, IPackageFragmentRoot[] moduleContext) {
		if (moduleContext == null) {
			seekPackageFragments(name, partialMatch, requestor);
			return;
		}
		if (partialMatch) {
			seekModuleAwarePartialPackageFragments(name, requestor, moduleContext);
			return;
		}
		long start = -1;
		if (VERBOSE)
			start = System.currentTimeMillis();
		try {
			for (IPackageFragmentRoot moduleRoot : moduleContext) {
				IPackageFragment fragment = moduleRoot.getPackageFragment(name);
				if (fragment.exists())
					requestor.acceptPackageFragment(fragment);
			}
		} finally {
			if (VERBOSE)
				this.timeSpentInSeekPackageFragmentsWithModuleContext += System.currentTimeMillis()-start;
		}
	}

