		public void logClasspath(FileSystem.Classpath[] classpaths) {
			if (classpaths == null) return;
			if ((this.tagBits & Logger.XML) != 0) {
				final int length = classpaths.length;
				if (length != 0) {
					// generate xml output
					printTag(Logger.CLASSPATHS, new HashMap<>(), true, false);
					HashMap<String, Object> parameters = new HashMap<>();
					for (int i = 0; i < length; i++) {
						String classpath = classpaths[i].getPath();
						parameters.put(Logger.PATH, classpath);
						File f = new File(classpath);
						String id = null;
						if (f.isFile()) {
							int kind = Util.archiveFormat(classpath);
							switch (kind) {
								case Util.ZIP_FILE:
									id = Logger.CLASSPATH_JAR;
									break;
								default:
									id = Logger.CLASSPATH_FILE;
									break;
							}
						} else if (f.isDirectory()) {
							id = Logger.CLASSPATH_FOLDER;
						}
						if (id != null) {
							parameters.put(Logger.CLASSPATH_ID, id);
							printTag(Logger.CLASSPATH, parameters, true, true);
						}
					}
					endTag(Logger.CLASSPATHS);
				}
			}

		}

