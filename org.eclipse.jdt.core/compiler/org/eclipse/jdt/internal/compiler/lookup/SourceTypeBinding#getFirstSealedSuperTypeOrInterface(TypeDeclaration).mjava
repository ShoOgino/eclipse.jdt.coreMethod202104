private Map.Entry<TypeReference, ReferenceBinding> getFirstSealedSuperTypeOrInterface(TypeDeclaration typeDecl) {
	boolean isAnySuperTypeSealed = this.superclass != null ? this.superclass.isSealed() : false;
	if (isAnySuperTypeSealed)
		return new AbstractMap.SimpleEntry<>(typeDecl.superclass, this.superclass);

	ReferenceBinding[] superInterfaces1 = this.superInterfaces();
	int l = superInterfaces1 != null ? superInterfaces1.length : 0;
	for (int i = 0; i < l; ++i) {
		ReferenceBinding superInterface = superInterfaces1[i];
		if (superInterface.isSealed()) {
			return new AbstractMap.SimpleEntry<>(typeDecl.superInterfaces[i], superInterface);
		}
	}
	return null;
}

