private boolean validateRestrictedKeywords(char[] name, String expectedToken, int start, int end, boolean reportSyntaxError) {
	boolean isPreviewEnabled = this.options.enablePreviewFeatures;
	if (expectedToken != null) {
		String tokenName= new String(name);
		String restrictedIdentifier= this.permittedRestrictedKeyWordMap.get(tokenName);
		if (restrictedIdentifier == null || !restrictedIdentifier.equals(expectedToken)) {
			return false;
		}
	}
	for (JavaFeature feature : JavaFeature.values()) {
		char[][] restrictedKeywords = feature.getRestrictedKeywords();
		for (char[] k : restrictedKeywords) {
			if (CharOperation.equals(name, k)) {
				if (reportSyntaxError) {
					return validateJavaFeatureSupport(feature, start, end);
				} else {
					if (feature.isPreview()) {
						int severity = isPreviewEnabled ? ProblemSeverities.Error | ProblemSeverities.Fatal : ProblemSeverities.Warning;
						restrictedTypeName(name, CompilerOptions.versionFromJdkLevel(feature.getCompliance()), start, end, severity);
						return isPreviewEnabled;
					} else {
						restrictedTypeName(name, CompilerOptions.versionFromJdkLevel(feature.getCompliance()), start, end, ProblemSeverities.Error | ProblemSeverities.Fatal);
						return true;
					}
				}
			}
		}
	}
	return false;
}

