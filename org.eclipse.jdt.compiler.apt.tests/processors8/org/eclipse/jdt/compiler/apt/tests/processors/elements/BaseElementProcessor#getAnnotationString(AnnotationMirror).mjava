	protected String getAnnotationString(AnnotationMirror annot) {
		DeclaredType annotType = annot.getAnnotationType();
		TypeElement type = (TypeElement) annotType.asElement();
		StringBuffer buf = new StringBuffer("@" + type.getSimpleName());
		Map<? extends ExecutableElement, ? extends AnnotationValue> values = annot.getElementValues();
		Set<? extends ExecutableElement> keys = values.keySet();
		buf.append('(');
		for (ExecutableElement executableElement : keys) { // @Marker3()
			buf.append(executableElement.getSimpleName());
			buf.append('=');
			AnnotationValue value = values.get(executableElement);
			if (value.getValue() instanceof Iterable<?>) {
				@SuppressWarnings("unchecked")
				Iterator<AnnotationValue> iterator = ((Iterable<AnnotationValue>) value.getValue()).iterator();
				if (iterator.hasNext()) {
					buf.append(iterator.next().getValue());
				}
				while (iterator.hasNext()) {
					buf.append(",");
					buf.append(iterator.next().getValue());
				}
 				
			} else {
				buf.append(value.getValue());
			}
		}
		buf.append(')');
		return buf.toString();
	}

