	public void testRecords10() {
		Set<? extends Element> elements = roundEnv.getRootElements();
		TypeElement record = null;
		for (Element element : elements) {
			if ("R4".equals(element.getSimpleName().toString())) {
				record = (TypeElement) element;
			}
		}
		assertNotNull("TypeElement for record should not be null", record);

		List<? extends Element> enclosedElements = record.getEnclosedElements();
		List<ExecutableElement> methodsIn = ElementFilter.constructorsIn(enclosedElements);
		assertEquals("incorrect method", 1, methodsIn.size());
		ExecutableElement m = methodsIn.get(0);
		verifyAnnotations(m, new String[]{});
		TypeMirror asType = m.asType();
		verifyAnnotations(asType, new String[]{});
		List<? extends VariableElement> parameters = m.getParameters();
		assertEquals("incorrect parameters", 1, parameters.size());
		VariableElement var = parameters.get(0);
		assertEquals("component name incorrect", "i", var.getSimpleName().toString());
		verifyAnnotations(var, new String[]{"@Marker4()"});
	}

