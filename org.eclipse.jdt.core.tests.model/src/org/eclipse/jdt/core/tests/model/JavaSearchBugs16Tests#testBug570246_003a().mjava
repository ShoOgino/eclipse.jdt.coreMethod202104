		// declaration occurrence of local enum
		public void testBug570246_003a() throws CoreException {
			this.workingCopies = new ICompilationUnit[1];
			this.workingCopies[0] = getWorkingCopy("/JavaSearchBugs/src/X.java",

					"public class X {\n"+
							"    public static void main(String[] args) {\n"+
							"          enum Role { M, D }\n"+
							" enum T {\n"+
							"       PHILIPPE(37) {\n"+
							"               public boolean isManager() {\n"+
							"                       return true;\n"+
							"               }\n"+
							"       },\n"+
							"       DAVID(27),\n"+
							"       JEROME(33),\n"+
							"       OLIVIER(35),\n"+
							"       KENT(40),\n"+
							"       YODA(41),\n"+
							"       FREDERIC;\n"+
							"       final static int OLD = 41;\n"+
							"\n"+
							"\n"+
							"   int age;\n"+
							"       Role role;\n"+
							"\n"+
							"       T() { this(OLD); }\n"+
							"       T(int age) {\n"+
							"               this.age = age;\n"+
							"       }\n"+
							"       public int age() { return this.age; }\n"+
							"       public boolean isManager() { return false; }\n"+
							"       void setRole(boolean mgr) {\n"+
							"               this.role = mgr ? Role.M : Role.D;\n"+
							"       }\n"+
							"}\n"+
							"       System.out.print(\"JDTCore team:\");\n"+
							"       T oldest = null;\n"+
							"       int maxAge = Integer.MIN_VALUE;\n"+
							"       for (T t : T.values()) {\n"+
							"            if (t == T.YODA) continue;// skip YODA\n"+
							"            t.setRole(t.isManager());\n"+
							"                        if (t.age() > maxAge) {\n"+
							"               oldest = t;\n"+
							"               maxAge = t.age();\n"+
							"            }\n"+
							"                      Location l = switch(t) {\n"+
							"                         case PHILIPPE, DAVID, JEROME, FREDERIC-> Location.SNZ;\n"+
							"                         case OLIVIER, KENT -> Location.OTT;\n"+
							"                         default-> throw new AssertionError(\"Unknown team member: \" + t);\n"+
							"                       };\n"+
							"\n"+
							"            System.out.print(\" \"+ t + ':'+t.age()+':'+l+':'+t.role);\n"+
							"        }\n"+
							"        System.out.println(\" WINNER is:\" + T.valueOf(oldest.name()));\n"+
							"    }\n"+
							"\n"+
							"   private enum Location { SNZ, OTT }\n"+
							"}"
					);
			search("T", ENUM, ALL_OCCURRENCES);
			assertSearchResults("src/X.java void X.main(String[]):T#1 [T] EXACT_MATCH\n"
					+ "src/X.java void X.main(String[]) [T] EXACT_MATCH\n"
					+ "src/X.java void X.main(String[]) [T] EXACT_MATCH\n"
					+ "src/X.java void X.main(String[]) [T] EXACT_MATCH\n"
					+ "src/X.java void X.main(String[]) [T] EXACT_MATCH\n"
					+ "src/X.java void X.main(String[]) [T] EXACT_MATCH");


		}

