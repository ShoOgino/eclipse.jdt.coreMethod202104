	public void testRecord005() throws CoreException {
		if (!isJRE16) {
			System.err.println("Test "+getName()+" requires a JRE 16");
			return;
		}
		String contents = "public class X {\n" +
				  "	public static void main(String[] args) {\n" +
		          "		record R(int x,String y){}\n" +
				  "		R r = new R(100, \"Point\");\n" +
		          "		System.out.println(r.x());\n" +
				  "	}\n" +
		          "}";
		this.workingCopy = getWorkingCopy("/Converter_16/src/X.java", true/*resolve*/);
		ASTNode node = buildAST(
			contents,
			this.workingCopy);
		assertEquals("Not a compilation unit", ASTNode.COMPILATION_UNIT, node.getNodeType());
		CompilationUnit compilationUnit = (CompilationUnit) node;
		assertProblemsSize(compilationUnit, 0);
		node = getASTNode(compilationUnit, 0, 0);
		assertEquals("Not a method declaration", ASTNode.METHOD_DECLARATION, node.getNodeType());
		MethodDeclaration methodDeclaration = (MethodDeclaration) node;
		List<ASTNode> statements = methodDeclaration.getBody().statements();
		node = statements.get(0);
		assertEquals("Not a TypDeclaration statement", ASTNode.TYPE_DECLARATION_STATEMENT, node.getNodeType());
		TypeDeclarationStatement tdStmt = (TypeDeclarationStatement) node;
		node = tdStmt.getDeclaration();
		assertEquals("Not a RecordDeclaration", ASTNode.RECORD_DECLARATION, node.getNodeType());
		RecordDeclaration record = (RecordDeclaration)node;
		List<SingleVariableDeclaration> recordComponents = record.recordComponents();
		assertEquals("There should be 2 record components", 2, recordComponents.size());
		SingleVariableDeclaration recordComponent = recordComponents.get(0);
		assertEquals("First record component name should be x","x" , recordComponent.getName().toString());
		assertEquals("First record component type is int" , "int", recordComponent.getType().toString());
		IVariableBinding resolveBinding = recordComponent.resolveBinding();
		assertEquals("First record component binding" , true, resolveBinding.isRecordComponent());
		recordComponent = recordComponents.get(1);
		assertEquals("Second record component name should be y","y" , recordComponent.getName().toString());
		assertEquals("Second record component type is String" , "String", recordComponent.getType().toString());
		resolveBinding = recordComponent.resolveBinding();
		assertEquals("Second record component binding" , true, resolveBinding.isRecordComponent());
	}

