	public void testRecord012() throws CoreException {
		if (!isJRE16) {
			System.err.println("Test "+getName()+" requires a JRE 16");
			return;
		}
		String contents =
			"public record X(int myComp) {\n" +
			"		public void foo() {\n" +
			"			System.out.println(\"no error\");\n" +
			"		}\n" +
			"\n" +
			"}\n";
		this.workingCopy = getWorkingCopy("/Converter_16/src/X.java", true/*resolve*/);
		ASTNode node = buildAST(
			contents,
			this.workingCopy);
		assertEquals("Not a compilation unit", ASTNode.COMPILATION_UNIT, node.getNodeType());
		CompilationUnit compilationUnit = (CompilationUnit) node;
		assertProblemsSize(compilationUnit, 0);
		List<AbstractTypeDeclaration> types = compilationUnit.types();
		assertEquals("No. of Types is not 1", types.size(), 1);
		AbstractTypeDeclaration type = types.get(0);
		assertTrue("type not a Record", type instanceof RecordDeclaration);
		RecordDeclaration recDecl = (RecordDeclaration)type;
		MethodDeclaration[] methods = recDecl.getMethods();
		assertEquals("No. of methods is not 1", methods.length, 1);
		ITypeBinding typeBinding = type.resolveBinding();
		assertNotNull("typeBinding is null", typeBinding);
		IMethodBinding[] mBindings = typeBinding.getDeclaredMethods();
		assertEquals("No. of declared methods is not 6", mBindings.length, 6);
		for (IMethodBinding mBinding : mBindings) {
			if (mBinding.getName().equals("X") || mBinding.getName().equals("foo")) {
				assertFalse("foo is not a synthetic method", mBinding.isSyntheticRecordMethod());
			} else {
				assertTrue("expected a synthetic method", mBinding.isSyntheticRecordMethod());
			}
		}

	}

